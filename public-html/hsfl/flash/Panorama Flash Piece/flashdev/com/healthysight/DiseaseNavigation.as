package com.healthysight{	/*	Document class for the main navigation on healthy sight panorama piece		-Chris Natale 12/11/08	*/			import flash.display.MovieClip;	import flash.display.DisplayObject;	import flash.events.MouseEvent;	import flash.events.Event;	import gs.TweenLite;	import gs.easing.*;	import com.healthysight.Scale9Mask;	import com.healthysight.events.*;		public class DiseaseNavigation extends MovieClip{				var navArray:Array;		var isOpen:Boolean;		var mask_spr:Scale9Mask;		var currentSelection:String;		var currentSelection_mc:MovieClip;		var container:*;				public function DiseaseNavigation(){			isOpen=false;			initMask();  //need to use a special mask class so that I can use 9 grid scaling with the nav mask 						nav_mc.lines_mc.alpha=0;			navArray = new Array(nav_mc.cataracts_mc, nav_mc.glare_mc, nav_mc.healthySight_mc, nav_mc.glaucoma_mc, nav_mc.presbyopia_mc, nav_mc.retinopathy_mc);									for each (var i:MovieClip in navArray){				i.buttonMode=true;				i.addEventListener(MouseEvent.CLICK, onClick)				i.addEventListener(MouseEvent.ROLL_OVER, onOver);				i.addEventListener(MouseEvent.ROLL_OUT, onOut);			}									nav_mc.addEventListener(MouseEvent.ROLL_OVER, onNavOver);			nav_mc.addEventListener(MouseEvent.ROLL_OUT, onNavOut);									currentSelection = "healthySight_mc"; //set current selection to default value			nav_mc.healthySight_mc.gotoAndStop("select");			nav_mc.y = -nav_mc.healthySight_mc.y;						//stage.addEventListener(CustomEvent.MAIN_NAV_OVER, onMainNavOver);			//stage.addEventListener(CustomEvent.MAIN_NAV_OUT, onMainNavOut);		}				/*		private function onMainNavOver(e:CustomEvent){			trace("MAIN NAV OVER called from diseasenavigation");		}		private function onMainNavOut(e:CustomEvent){			trace("MAIN NAV OUT called from diseasenavigation");		}		*/										private function initMask(){						mask_spr = new Scale9Mask(208, 202, 5, 5, 5, 5);			mask_spr.x=3;			mask_spr.y=0;			mask_spr.height= 34;			mask_spr.y=0;			this.addChild(mask_spr);			nav_mc.mask= mask_spr;					}						//////////  handle clicks outside of nav - causes nav to close  ////////				public function onStageClick(e:MouseEvent){			if(isOpen){				if(e.target == nav_mc || nav_mc.contains(DisplayObject(e.target))){									}				else{					closeNav(MovieClip(nav_mc.getChildByName(currentSelection)));								}			}					}				private function onClick(e:MouseEvent){			if(isOpen){ //newly selected item				var oldSelection:String = currentSelection;				resetNavStates();				e.currentTarget.gotoAndStop("select");						currentSelection = e.currentTarget.name;								//try adding the vision impairment to panorama module				try{					this.container.p3d.initVisionImpairment(currentSelection, oldSelection);					//trace("container: "+ container.p3d);				}				catch(e:Error){					trace("Error calling disease overlay function: " + e);				}								closeNav(MovieClip(e.currentTarget));			}			else{//open it				openNav(MovieClip(e.currentTarget));			}		}				private function onOver(e:MouseEvent){			if(currentSelection != e.currentTarget.name && isOpen){				e.currentTarget.gotoAndPlay("rollover");			}		}				private function onOut(e:MouseEvent){			if(currentSelection != e.currentTarget.name && isOpen){				e.currentTarget.gotoAndPlay("rollout");			}					}						private function closeNav(selection_mc:MovieClip){			var offset:int = -selection_mc.y;			TweenLite.to(mask_spr, .75, {height:34, y:0, ease:Custom.easeOut});			TweenLite.to(nav_mc, .75, {y:offset, ease:Custom.easeOut});			TweenLite.to(nav_mc.lines_mc, .75, {alpha:0, ease:Custom.easeOut});			isOpen=false;		}				private function openNav(selection_mc:MovieClip){			var offset:int = -nav_mc.healthySight_mc.y;			TweenLite.to(mask_spr, .75, {height:202, y:offset, ease:Custom.easeOut});			TweenLite.to(nav_mc.lines_mc, .75, {alpha:1, ease:Custom.easeOut});			TweenLite.to(nav_mc, .75, {y:offset, ease:Custom.easeOut});			isOpen=true;		}						private function resetNavStates(){			nav_mc.cataracts_mc.gotoAndStop("normal");			nav_mc.glare_mc.gotoAndStop("normal");			nav_mc.healthySight_mc.gotoAndStop("normal");			nav_mc.glaucoma_mc.gotoAndStop("normal");			nav_mc.presbyopia_mc.gotoAndStop("normal");			nav_mc.retinopathy_mc.gotoAndStop("normal");		}				//sets nav to healthy sight		public function resetNav(){			resetNavStates();			nav_mc.healthySight_mc.gotoAndStop("select");					currentSelection = "healthySight_mc";			closeNav(nav_mc.healthySight_mc);		}						///////////////  nav over and out fires events so that other parts of the program can respond  ////////////		private function onNavOver(e:MouseEvent){			//stage.dispatchEvent(new CustomEvent("mainNavOver"));		}				private function onNavOut(e:MouseEvent){			//stage.dispatchEvent(new CustomEvent("mainNavOut"));		}			}	}